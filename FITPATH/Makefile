SRCS=$(wildcard *.c)
OBJS=$(SRCS:.c=.o)

CFLAGS=-O0 -g -Wall -DUSE_INT_WEIGHT -lm  -std=c99# -pg
#CFLAGS=-O2 -Wall -DUSE_INT_WEIGHT# -pg

EVALUATESINGLEPATHSETD_OBJS=array.o \
		dijkstra.o \
		floatHeap.o \
		graph.o \
		heap.o \
		heuristics.o \
		list.o \
		mainEvaluateSinglePathSet.o \
		parserOnlyPaths.o \
		orderedPaths.o \
		prefixTree.o \
		set.o \
		simulationd.o \
		stack.o \
		state.o

EVALUATESINGLEPATHSETE_OBJS=array.o \
		dijkstra.o \
		floatHeap.o \
		graph.o \
		heap.o \
		heuristics.o \
		list.o \
		mainEvaluateSinglePathSet.o \
		parserOnlyPaths.o \
		orderedPaths.o \
		prefixTree.o \
		set.o \
		simulatione.o \
		stack.o \
		state.o

EVALUATESINGLEPATHSETF_OBJS=array.o \
		dijkstra.o \
		floatHeap.o \
		graph.o \
		heap.o \
		heuristics.o \
		list.o \
		mainEvaluateSinglePathSet.o \
		parserOnlyPaths.o \
		orderedPaths.o \
		prefixTree.o \
		set.o \
		simulationf.o \
		stack.o \
		state.o

EVALUATESINGLEPATHSETG_OBJS=array.o \
		dijkstra.o \
		floatHeap.o \
		graph.o \
		heap.o \
		heuristics.o \
		list.o \
		mainEvaluateSinglePathSet.o \
		parserOnlyPaths.o \
		orderedPaths.o \
		prefixTree.o \
		set.o \
		simulationg.o \
		stack.o \
		state.o

EVALUATESINGLEPATHSETH_OBJS=array.o \
		dijkstra.o \
		floatHeap.o \
		graph.o \
		heap.o \
		heuristics.o \
		list.o \
		mainEvaluateSinglePathSet.o \
		parserOnlyPaths.o \
		orderedPaths.o \
		prefixTree.o \
		set.o \
		simulationh.o \
		stack.o \
		stateh.o

EVALUATESINGLEPATHSETH2_OBJS=array.o \
		dijkstra.o \
		floatHeap.o \
		graph.o \
		heap.o \
		heuristics.o \
		list.o \
		mainEvaluateSinglePathSet.o \
		parserOnlyPaths.o \
		orderedPaths.o \
		prefixTree.o \
		set.o \
		simulationh2.o \
		stack.o \
		stateh2.o


#EVALUATESINGLEPATHSETI_OBJS=array.o \
		dijkstra.o \
		floatHeap.o \
		graph.o \
		heap.o \
		heuristics.o \
		list.o \
		mainEvaluateSinglePathSet.o \
		parserOnlyPaths.o \
		orderedPaths.o \
		prefixTree.o \
		set.o \
		simulationi.o \
		stack.o \
		stateh.o

EVALUATESINGLEPATHSET_OBJS=array.o \
		dijkstra.o \
		floatHeap.o \
		graph.o \
		heap.o \
		heuristics.o \
		list.o \
		mainEvaluateSinglePathSet.o \
		parserOnlyPaths.o \
		orderedPaths.o \
		prefixTree.o \
		set.o \
		simulation.o \
		stack.o \
		state.o


PATHGENERATOR_OBJS=array.o \
		dijkstra.o \
		floatHeap.o \
		graph.o \
		heap.o \
		heuristics.o \
		list.o \
		mainPathGenerator.o \
		parser.o \
		paths.o \
		prefixTree.o \
		set.o \
		simulation.o \
		stack.o \
		state.o

OPTIMUM_OBJS=array.o \
		dijkstra.o \
		floatHeap.o \
		graph.o \
		heap.o \
		heuristics.o \
		list.o \
		mainOptimum.o \
		parser.o \
		orderedPaths.o \
		prefixTree.o \
		set.o \
		simulation.o \
		stack.o \
		state.o

BRUTEFORCE_OBJS=array.o \
		dijkstra.o \
		floatHeap.o \
		graph.o \
		heap.o \
		heuristics.o \
		list.o \
		main.o \
		parser.o \
		orderedPaths.o \
		prefixTree.o \
		set.o \
		simulation.o \
		stack.o \
		state.o

EVALUATESIMULATION_OBJS=array.o \
		dijkstra.o \
		floatHeap.o \
		graph.o \
		heap.o \
		heuristics.o \
		list.o \
		mainEvaluateSimulation.o \
		parser.o \
		orderedPaths.o \
		prefixTree.o \
		set.o \
		simulation.o \
		simulationb.o \
		stack.o \
		evaluateSimulationAuxB.o \
		evaluateSimulationAux.o \
		state.o

EVALUATESIMULATION2_OBJS=array.o \
		dijkstra.o \
		floatHeap.o \
		graph.o \
		heap.o \
		heuristics.o \
		list.o \
		mainEvaluateSimulation2.o \
		parser.o \
		orderedPaths.o \
		prefixTree.o \
		set.o \
		simulationc.o \
		stack.o \
		state.o

HEURISTIC_ILS_MATE_OBJS=array.o \
		dijkstra.o \
		graph.o \
		heap.o \
		heuristics.o \
		list.o \
		mainHeuristicILS_new.o \
		parser.o \
		prefixTree.o \
		set.o \
		simulationh2.o \
		stack.o \
		stateh2.o \
		yen.o

FITPATH_OBJS=array.o \
		dijkstra.o \
		graph.o \
		heap.o \
		heuristics.o \
		list.o \
		mainFITPATH.o \
		parser.o \
		prefixTree.o \
		set.o \
		simulationh2.o \
		stack.o \
		stateh2.o \
		yen.o

MAPE_OBJS=array.o \
		dijkstra.o \
		graph.o \
		heap.o \
		heuristics.o \
		list.o \
		mainMAPE.o \
		parser.o \
		prefixTree.o \
		set.o \
		simulationh2.o \
		stack.o \
		stateh2.o \
		yen.o

MATE_OBJS=array.o \
		dijkstra.o \
		graph.o \
		heap.o \
		heuristics.o \
		list.o \
		mainHeuristicM.o \
		parser.o \
		prefixTree.o \
		set.o \
		simulationh2.o \
		stack.o \
		stateh2.o \
		yen.o

HEURISTIC1_OBJS=array.o \
		dijkstra.o \
		graph.o \
		heap.o \
		heuristics.o \
		list.o \
		mainHeuristic1.o \
		parser.o \
		prefixTree.o \
		set.o \
		simulation.o \
		stack.o \
		state.o \
		yen.o

HEURISTIC2_OBJS=array.o \
		dijkstra.o \
		graph.o \
		heap.o \
		list.o \
		mainHeuristic2.o \
		parser.o \
		set.o \
		simulation.o \
		stack.o \
		state.o

HEURISTIC2_5_OBJS=array.o \
		dijkstra.o \
		graph.o \
		heap.o \
		list.o \
		mainHeuristic2_5.o \
		parser.o \
		set.o \
		simulation.o \
		stack.o \
		state.o

HEURISTIC1B_OBJS=array.o \
		dijkstra.o \
		graph.o \
		heap.o \
		heuristics.o \
		list.o \
		mainHeuristic1.o \
		parser.o \
		prefixTree.o \
		set.o \
		simulationb.o \
		stack.o \
		state.o \
		yen.o

HEURISTIC1D_OBJS=array.o \
		dijkstra.o \
		graph.o \
		heap.o \
		heuristics.o \
		list.o \
		mainHeuristic1.o \
		parser.o \
		prefixTree.o \
		set.o \
		simulationd.o \
		stack.o \
		state.o \
		yen.o


HEURISTIC2B_OBJS=array.o \
		dijkstra.o \
		graph.o \
		heap.o \
		list.o \
		mainHeuristic2.o \
		parser.o \
		set.o \
		simulationb.o \
		stack.o \
		state.o

HEURISTIC2_5B_OBJS=array.o \
		dijkstra.o \
		graph.o \
		heap.o \
		list.o \
		mainHeuristic2_5.o \
		parser.o \
		set.o \
		simulationb.o \
		stack.o \
		state.o

HEURISTIC2_5D_OBJS=array.o \
		dijkstra.o \
		graph.o \
		heap.o \
		list.o \
		mainHeuristic2_5.o \
		parser.o \
		set.o \
		simulationd.o \
		stack.o \
		state.o

HEURISTIC3D_OBJS=array.o \
		dijkstra.o \
		graph.o \
		heap.o \
		list.o \
		mainHeuristic3.o \
		parser.o \
		set.o \
		simulationd.o \
		stack.o \
		floyd.o \
		prefixTree.o \
		state.o

HEURISTIC3E_OBJS=array.o \
		dijkstra.o \
		graph.o \
		heap.o \
		list.o \
		mainHeuristic3.o \
		parser.o \
		set.o \
		simulatione.o \
		stack.o \
		floyd.o \
		prefixTree.o \
		state.o

HEURISTIC3F_OBJS=array.o \
		dijkstra.o \
		graph.o \
		heap.o \
		list.o \
		mainHeuristic3.o \
		parser.o \
		set.o \
		simulationf.o \
		stack.o \
		floyd.o \
		prefixTree.o \
		state.o

HEURISTIC3G_OBJS=array.o \
		dijkstra.o \
		graph.o \
		heap.o \
		list.o \
		mainHeuristic3.o \
		parser.o \
		set.o \
		simulationg.o \
		stack.o \
		floyd.o \
		prefixTree.o \
		state.o

HEURISTIC3H_OBJS=array.o \
		dijkstra.o \
		graph.o \
		heap.o \
		list.o \
		mainHeuristic3.o \
		parser.o \
		set.o \
		simulationh.o \
		stack.o \
		floyd.o \
		prefixTree.o \
		stateh.o

#HEURISTIC3I_OBJS=array.o \
		dijkstra.o \
		graph.o \
		heap.o \
		list.o \
		mainHeuristic3.o \
		parser.o \
		set.o \
		simulationi.o \
		stack.o \
		floyd.o \
		prefixTree.o \
		stateh.o

JUSTFLOYD_OBJS=array.o \
		dijkstra.o \
		graph.o \
		heap.o \
		heuristics.o \
		list.o \
		justFloyd.o \
		parser.o \
		prefixTree.o \
		set.o \
		simulation.o \
		stack.o \
		state.o \
		yen.o

all: optimum heuristic1 heuristic2 heuristic2_5 heuristic1b heuristic2b heuristic2_5b pathGenerator bruteForce evaluateSimulation \
	evaluateSimulation2 evaluateSinglePathSet evaluateSinglePathSetD heuristic2_5d heuristic1d heuristic3d heuristic3e evaluateSinglePathSetE \
	heuristic3f evaluateSinglePathSetF heuristic3g evaluateSinglePathSetG heuristic3h evaluateSinglePathSetH justFloyd evaluateSinglePathSetH2 #heuristic3i evaluateSinglePathSetI

pathGenerator: ${PATHGENERATOR_OBJS}
	${CC} ${PATHGENERATOR_OBJS} -o pathGenerator ${CFLAGS}

optimum: ${OPTIMUM_OBJS}
	${CC} ${OPTIMUM_OBJS} -o optimum ${CFLAGS}

heuristicILS_mate: ${HEURISTIC_ILS_MATE_OBJS}
	${CC} ${HEURISTIC_ILS_MATE_OBJS} -o heuristicILS_mate ${CFLAGS}

fitpath: ${FITPATH_OBJS}
	${CC} ${FITPATH_OBJS} -o fitpath ${CFLAGS}

mape: ${MAPE_OBJS}
	${CC} ${MAPE_OBJS} -o mape ${CFLAGS}

mate: ${MATE_OBJS}
	${CC} ${MATE_OBJS} -o mate ${CFLAGS}

heuristic1: ${HEURISTIC1_OBJS}
	${CC} ${HEURISTIC1_OBJS} -o heuristic1 ${CFLAGS}

justFloyd: ${JUSTFLOYD_OBJS}
	${CC} ${JUSTFLOYD_OBJS} -o justFloyd ${CFLAGS}

heuristic2: ${HEURISTIC2_OBJS}
	${CC} ${HEURISTIC2_OBJS} -o heuristic2 ${CFLAGS}

heuristic2_5: ${HEURISTIC2_5_OBJS}
	${CC} ${HEURISTIC2_5_OBJS} -o heuristic2_5 ${CFLAGS}

heuristic1b: ${HEURISTIC1B_OBJS}
	${CC} ${HEURISTIC1B_OBJS} -o heuristic1b ${CFLAGS}

heuristic1d: ${HEURISTIC1D_OBJS}
	${CC} ${HEURISTIC1D_OBJS} -o heuristic1d ${CFLAGS}

heuristic2b: ${HEURISTIC2B_OBJS}
	${CC} ${HEURISTIC2B_OBJS} -o heuristic2b ${CFLAGS}

heuristic2_5b: ${HEURISTIC2_5B_OBJS}
	${CC} ${HEURISTIC2_5B_OBJS} -o heuristic2_5b ${CFLAGS}

heuristic2_5d: ${HEURISTIC2_5D_OBJS}
	${CC} ${HEURISTIC2_5D_OBJS} -o heuristic2_5d ${CFLAGS}

heuristic3d: ${HEURISTIC3D_OBJS}
	${CC} ${HEURISTIC3D_OBJS} -o heuristic3d ${CFLAGS}

heuristic3e: ${HEURISTIC3E_OBJS}
	${CC} ${HEURISTIC3E_OBJS} -o heuristic3e ${CFLAGS}

heuristic3f: ${HEURISTIC3F_OBJS}
	${CC} ${HEURISTIC3F_OBJS} -o heuristic3f ${CFLAGS}

heuristic3g: ${HEURISTIC3G_OBJS}
	${CC} ${HEURISTIC3G_OBJS} -o heuristic3g ${CFLAGS}

heuristic3h: ${HEURISTIC3H_OBJS}
	${CC} ${HEURISTIC3H_OBJS} -o heuristic3h ${CFLAGS}

heuristic3i: ${HEURISTIC3I_OBJS}
	${CC} ${HEURISTIC3I_OBJS} -o heuristic3i ${CFLAGS}

bruteForce: ${BRUTEFORCE_OBJS}
	${CC} ${BRUTEFORCE_OBJS} -o bruteForce ${CFLAGS}

evaluateSimulation2: ${EVALUATESIMULATION2_OBJS}
	${CC} ${EVALUATESIMULATION2_OBJS} -o evaluateSimulation2 ${CFLAGS}

evaluateSinglePathSet: ${EVALUATESINGLEPATHSET_OBJS}
	${CC} ${EVALUATESINGLEPATHSET_OBJS} -o evaluateSinglePathSet ${CFLAGS}

evaluateSinglePathSetD: ${EVALUATESINGLEPATHSETD_OBJS}
	${CC} ${EVALUATESINGLEPATHSETD_OBJS} -o evaluateSinglePathSetD ${CFLAGS}

evaluateSinglePathSetE: ${EVALUATESINGLEPATHSETE_OBJS}
	${CC} ${EVALUATESINGLEPATHSETE_OBJS} -o evaluateSinglePathSetE ${CFLAGS}

evaluateSinglePathSetF: ${EVALUATESINGLEPATHSETF_OBJS}
	${CC} ${EVALUATESINGLEPATHSETF_OBJS} -o evaluateSinglePathSetF ${CFLAGS}

evaluateSinglePathSetG: ${EVALUATESINGLEPATHSETG_OBJS}
	${CC} ${EVALUATESINGLEPATHSETG_OBJS} -o evaluateSinglePathSetG ${CFLAGS}

evaluateSinglePathSetH: ${EVALUATESINGLEPATHSETH_OBJS}
	${CC} ${EVALUATESINGLEPATHSETH_OBJS} -o evaluateSinglePathSetH ${CFLAGS}

evaluateSinglePathSetH2: ${EVALUATESINGLEPATHSETH2_OBJS}
	${CC} ${EVALUATESINGLEPATHSETH2_OBJS} -o evaluateSinglePathSetH2 ${CFLAGS}

evaluateSinglePathSetI: ${EVALUATESINGLEPATHSETI_OBJS}
	${CC} ${EVALUATESINGLEPATHSETI_OBJS} -o evaluateSinglePathSetI ${CFLAGS}

evaluateSimulation: ${EVALUATESIMULATION_OBJS}
	${LD} -r -o evaluateSimulationAux_int1.o evaluateSimulationAux.o simulationb.o 
	${LD} -r -o evaluateSimulationAux_int2.o evaluateSimulationAuxB.o simulationb.o  
	objcopy -G evaluateSimulationAuxSimulate evaluateSimulationAux_int1.o evaluateSimulationAux_final1.o
	objcopy -G evaluateSimulationAuxSimulateB evaluateSimulationAux_int2.o evaluateSimulationAux_final2.o
	${CC} array.o \
		dijkstra.o \
		floatHeap.o \
		graph.o \
		heap.o \
		heuristics.o \
		list.o \
		mainEvaluateSimulation.o \
		parser.o \
		orderedPaths.o \
		prefixTree.o \
		set.o \
		stack.o \
		evaluateSimulationAux_final1.o \
		evaluateSimulationAux_final2.o \
		state.o -o evaluateSimulation ${CFLAGS}

%.o : %.c
	$(CC) -c $(CFLAGS) $< -o $@

clean:
	rm -f optimum heuristicILS_mate mate heuristic1 heuristic2 heuristic2_5 heuristic1b heuristic2b heuristic2_5b \
	pathGenerator bruteForce ${OBJS} evaluateSimulation evaluateSimulationAux_int1.o evaluateSimulationAux_int2.o \
	evaluateSimulationAux_final1.o evaluateSimulationAux_final2.o evaluateSimulation2 evaluateSinglePathSet evaluateSinglePathSetD heuristic2_5d heuristic1d heuristic3d evaluateSinglePathSetE evaluateSinglePathSetF heuristic3f evaluateSinglePathSetG heuristic3g evaluateSinglePathSetH heuristic3h evaluateSinglePathSetI heuristic3i justFloyd evaluateSinglePathSetH2

